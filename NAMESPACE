# Generated by roxygen2: do not edit by hand

S3method(fit,formula_list)
S3method(format,model_construct)
S3method(format,model_forge)
S3method(hypothesize,dagitty)
S3method(hypothesize,default)
S3method(hypothesize,formula)
S3method(hypothesize,list)
S3method(hypothesize,recipe)
S3method(hypothesize,rx)
S3method(hypothesize,tidy_dagitty)
S3method(model_construct,default)
S3method(model_construct,formula_list)
S3method(model_forge,model_archetype)
S3method(obj_print_data,model_construct)
S3method(obj_print_data,model_forge)
S3method(pillar_shaft,model_construct)
S3method(pillar_shaft,model_forge)
S3method(print,hypothesis)
S3method(print,model_map)
S3method(print,model_table)
S3method(tbl_models,data.frame)
S3method(vec_cast,model_construct.model_construct)
S3method(vec_cast,model_forge.model_forge)
S3method(vec_ptype2,model_construct.model_construct)
S3method(vec_ptype2,model_forge.model_forge)
S3method(vec_ptype_abbr,model_construct)
S3method(vec_ptype_abbr,model_forge)
S3method(vec_ptype_full,model_construct)
S3method(vec_ptype_full,model_forge)
export("%>%")
export(":=")
export(add_hypothesis)
export(construct_tests)
export(create_models)
export(expand_formula)
export(extract_results)
export(fetch_call)
export(fetch_combination)
export(fetch_data)
export(fetch_data_name)
export(fetch_formulae)
export(fetch_names)
export(fetch_raw)
export(fetch_special)
export(fetch_strata)
export(fetch_test)
export(fetch_test_opts)
export(find_confounders)
export(fit)
export(fit_calls)
export(fit_parsnip_models)
export(flatten)
export(hypothesize)
export(md_tbl)
export(mdls)
export(model_construct)
export(model_forge)
export(model_map)
export(rebuild.list_of_models)
export(reconstruct)
export(tbl_compare)
export(tbl_models)
export(tbl_sequential)
export(theme_gt_compact)
export(tidy)
export(tidy_models)
export(update_hypothesis)
import(vctrs)
importFrom(dplyr,across)
importFrom(dplyr,filter)
importFrom(dplyr,mutate)
importFrom(generics,fit)
importFrom(generics,tidy)
importFrom(magrittr,"%>%")
importFrom(pillar,pillar_shaft)
importFrom(rlang,":=")
importFrom(rlang,.data)
importFrom(tibble,tribble)
